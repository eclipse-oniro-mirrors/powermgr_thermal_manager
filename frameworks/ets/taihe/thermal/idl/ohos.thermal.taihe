/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@!namespace("@ohos.thermal", "thermal")

@!sts_inject("""
static { loadLibraryWithPermissionCheck("thermal_manager_taihe_native.z", "@ohos.thermal") }""")

union MyUndefined { @undefined Undefined; }

enum ThermalLevel: i32 {
    COOL = 0,
    NORMAL = 1,
    WARM = 2,
    HOT = 3,
    OVERHEATED = 4,
    WARNING = 5,
    EMERGENCY = 6,
    ESCAPE = 7
}

function RegisterThermalLevelCallback(thermalCb: (level: ThermalLevel) => void): void;

function UnregisterThermalLevelCallback(thermalCb: Optional<(arg: MyUndefined) => void>): void;

function GetLevel(): ThermalLevel;