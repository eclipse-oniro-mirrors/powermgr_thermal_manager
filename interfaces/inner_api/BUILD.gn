# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../thermalmgr.gni")

config("thermalsrv_private_config") {
  include_dirs = [ "${thermal_service_zidl}/include" ]
}

config("thermalsrv_public_config") {
  include_dirs = [ "native/include" ]
}

ohos_shared_library("thermalsrv_client") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  branch_protector_ret = "pac_ret"

  sources = [
    "${thermal_frameworks}/native/thermal_mgr_client.cpp",
    "${thermal_frameworks}/native/thermal_srv_sensor_info.cpp",
    "${thermal_service_zidl}/src/thermal_action_callback_stub.cpp",
    "${thermal_service_zidl}/src/thermal_level_callback_stub.cpp",
    "${thermal_service_zidl}/src/thermal_temp_callback_stub.cpp",
  ]

  configs = [
    "${thermal_service_zidl}:thermalmgr_ipc_public_config",
    "${utils_path}:utils_config",
    ":thermalsrv_private_config",
    "${utils_path}:coverage_flags",
  ]

  public_configs = [
    "${thermal_service_zidl}:thermalmgr_ipc_public_config",
    ":thermalsrv_public_config",
  ]

  deps = [ "${thermal_service_zidl}:thermalmgr_proxy" ]

  external_deps = [
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]
  subsystem_name = "powermgr"
  innerapi_tags = [ "platformsdk" ]
  part_name = "thermal_manager"
}

ohos_shared_library("thermalmgr_listener") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  sources = [ "${thermal_frameworks}/native/thermal_mgr_listener.cpp" ]

  configs = [
    "${utils_path}:utils_config",
    ":thermalsrv_private_config",
    "${utils_path}:coverage_flags",
  ]

  public_configs = [ ":thermalsrv_public_config" ]

  deps = [
    "${thermal_inner_api}:thermalsrv_client",
  ]

  external_deps = [
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]

  subsystem_name = "powermgr"
  part_name = "thermal_manager"
}
