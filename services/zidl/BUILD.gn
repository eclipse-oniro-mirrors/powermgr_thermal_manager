# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/idl_tool/idl.gni")
import("../../thermalmgr.gni")

config("thermalmgr_ipc_private_config") {
  include_dirs = [ "${thermal_inner_api}/native/include" ]
}

config("thermalmgr_ipc_public_config") {
  include_dirs = [
    "include",
    "${target_gen_dir}",
  ]
}

idl_gen_interface("thermalmgr_interface") {
  sources = [ "IThermalSrv.idl" ]

  log_domainid = "0xD002942"
  log_tag = "ThermalSvc"
  subsystem_name = "powermgr"
  part_name = "thermal_manager"
}

deps_ex = [
  "bundle_framework:appexecfwk_base",
  "hilog:libhilog",
  "hicollie:libhicollie",
  "ipc:ipc_core",
  "c_utils:utils",
  "ipc:ipc_single",
  "samgr:samgr_proxy",
]

ohos_source_set("thermalmgr_proxy") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  output_values = get_target_outputs(":thermalmgr_interface")
  sources = filter_include(output_values, [ "*_proxy.cpp" ])

  configs = [
    "${utils_path}:utils_config",
    ":thermalmgr_ipc_private_config",
    "${utils_path}:coverage_flags",
  ]

  public_configs = [ ":thermalmgr_ipc_public_config" ]

  deps = [ ":thermalmgr_interface" ]

  external_deps = deps_ex

  subsystem_name = "powermgr"
  part_name = "thermal_manager"
}

ohos_source_set("thermalmgr_stub") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  output_values = get_target_outputs(":thermalmgr_interface")
  sources = filter_include(output_values, [ "*_stub.cpp" ])

  sources += [
    "${thermal_frameworks}/native/thermal_srv_sensor_info.cpp",
    "src/thermal_action_callback_stub.cpp",
    "src/thermal_temp_callback_stub.cpp",
  ]

  configs = [
    "${utils_path}:utils_config",
    ":thermalmgr_ipc_private_config",
    "${utils_path}:coverage_flags",
  ]

  public_configs = [ ":thermalmgr_ipc_public_config" ]

  deps = [ ":thermalmgr_interface" ]
  external_deps = deps_ex

  subsystem_name = "powermgr"
  part_name = "thermal_manager"
}
